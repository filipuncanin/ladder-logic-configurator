<Window x:Class="ladder_diagram_app.MainWindow"
        x:Name="MainWindowControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ladder_diagram_app"
        xmlns:views="clr-namespace:ladder_diagram_app.Views"
        xmlns:user_controls="clr-namespace:ladder_diagram_app.UserControls"
        mc:Ignorable="d"
        Title="Ladder Diagram Configurator" Height="500" Width="900" MinHeight="500" MinWidth="900">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="ModernButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#E0E0E0"/>
                <Setter Property="BorderBrush" Value="#B0B0B0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#D0D0D0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#C0C0C0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SymbolButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#B0B0B0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#D0D0D0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SymbolButtonStyle2" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#B0B0B0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0,-4,0,0"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VariableBooleanButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <EventSetter Event="Click" Handler="ButtonChangeBoolean_Click" />
            </Style>

            <Style x:Key="VariableTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="TextAlignment" Value="Center"/>

                <EventSetter Event="TextBox.KeyDown" Handler="TextBoxVariable_TextChanged" />
                <EventSetter Event="TextBox.LostFocus" Handler="TextBoxVariable_TextChanged" />
                <EventSetter Event="TextBox.PreviewTextInput" Handler="TextBoxVariable_PreviewTextInput" />
            </Style>

            <Style x:Key="VariableComboBoxStyle" TargetType="ComboBox">
                <EventSetter Event="SelectionChanged" Handler="ComboBoxVariable_SelectionChanged" />
            </Style>

            <Style x:Key="VariableDeleteButtonStyle" TargetType="Button">
                <EventSetter Event="Click" Handler="ButtonDeleteVariable_Click" />
            </Style>

            <Style TargetType="Expander">
                <Setter Property="Background" Value="#F0F0F0"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,2,0,2"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel LastChildFill="False" Height="30">
                                <TextBlock Text="{Binding}" FontWeight="Bold" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                            </DockPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Visibility, ElementName=MonitorGrid}" Value="Collapsed">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsExpanded, ElementName=MonitorExpander}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="GridExpanderStyle" TargetType="RowDefinition">
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="Height" Value="100"/>
                <!-- Podrazumevana visina kada je vidljiv -->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Visibility, ElementName=MonitorGrid}" Value="Collapsed">
                        <Setter Property="MinHeight" Value="0"/>
                        <Setter Property="Height" Value="Auto"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsExpanded, ElementName=MonitorExpander}" Value="False">
                        <Setter Property="Height" Value="Auto"/>
                        <!-- Resetuj na Auto kada je kolapsovan -->
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>  <!-- Toolbar -->
            <RowDefinition Height="*"/>     <!-- Main Content -->
            <RowDefinition Height="5"/>     <!-- GridSplitter -->
            <RowDefinition Height="Auto" Style="{StaticResource GridExpanderStyle}"/>  <!-- MonitorGrid -->
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Grid Grid.Row="0" Background="#F5F5F5">
            <WrapPanel Orientation="Horizontal" Margin="10,5,10,10">
                <!-- Section 1: File -->
                <GroupBox Header="File" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonImport" Content="Import" Width="70" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonImport_Click"/>
                        <Button x:Name="ButtonExport" Content="Export" Width="70" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonExport_Click"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 1: Hardware -->
                <GroupBox Header="Hardware" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button  x:Name="ButtonDeviceInfo" Content="Info" Width="70" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonDeviceInfo_Click"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 2: Load Device -->
                <GroupBox Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <GroupBox.Header>
                        <TextBlock>
                            <Run Text="Device - " Foreground="Black"/>
                            <Run x:Name="StatusRun" Text="Not Connected" Foreground="Red"/>
                        </TextBlock>
                    </GroupBox.Header>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <StackPanel Margin="0,4,8,0">
                            <RadioButton x:Name="ConnectionMQTT" Content="MQTT" IsChecked="True" GroupName="Options"/>
                            <RadioButton x:Name="ConnectionBLE" Content="BLE" GroupName="Options"/>
                        </StackPanel>
                        <Button x:Name="ButtonConnect" Content="Connect" Width="70" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonConnect_Click"/>
                        <Button x:Name="ButtonDisconnect" Content="Disconnect" Width="70" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonDisconnect_Click"/>
                        <Button x:Name="ButtonSendToDevice" Content="Send to Device" Width="100" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonSendToDevice_Click"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 2: Device Parents -->
                <GroupBox Header="Parent(s)" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonParentDevice" Content=" Add Device(s)" Width="100" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonParentDevice_Click"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 4: Layout -->
                <GroupBox Header="Layout" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonAddWire" Content="Add Wire" Width="80" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonAddWire_Click"/>
                        <Button x:Name="ButtonDelete" Content="Delete" Width="80" Height="30" Margin="3" Style="{StaticResource ModernButtonStyle}"
                                Click="ButtonDelete_Click"/>
                        <Button x:Name="ButtonBranch" Margin="3" ToolTip="Branch" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="Branch" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Branch/branch_icon.png" Width="40" Height="20"/>
                        </Button>
                    </StackPanel>
                </GroupBox>

                <!-- Section 5: Contacts -->
                <GroupBox Header="Contacts" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonNOContact" Margin="3" ToolTip="NO Contact" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="NOContact" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Contacts/no_contact.png" Width="40" Height="20"/>
                        </Button>
                        <Button x:Name="ButtonNCContact" Margin="3" ToolTip="NC Contact" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="NCContact" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Contacts/nc_contact.png" Width="40" Height="20"/>
                        </Button>
                    </StackPanel>
                </GroupBox>

                <!-- Section 6: Coils -->
                <GroupBox Header="Coils" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonCoil" Margin="3" ToolTip="Coil" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="Coil" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Coils/coil.png" Width="40" Height="20"/>
                        </Button>
                        <Button x:Name="ButtonOneShotPositiveCoil" Margin="3" ToolTip="One Shot Positive Coil" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="OSPCoil" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Coils/one_shot_positive_coil.png" Width="40" Height="20"/>
                        </Button>
                        <Button x:Name="ButtonSetCoil" Margin="3" ToolTip="Set Coil" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="SetCoil" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Coils/set_coil.png" Width="40" Height="20"/>
                        </Button>
                        <Button x:Name="ButtonResetCoil" Margin="3" ToolTip="Reset Coil" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="ResetCoil" Width="50" Height="30"
                                Style="{StaticResource SymbolButtonStyle}">
                            <Image Source="/Resources/Coils/reset_coil.png" Width="40" Height="20"/>
                        </Button>
                    </StackPanel>
                </GroupBox>

                <!-- Section 7: Math -->
                <GroupBox Header="Math" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonAdd" Margin="3" ToolTip="Add" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="AddMath" Width="50" Height="30"
                                Content="+" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonSubtract" Margin="3" ToolTip="Subtract" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="SubtractMath" Width="50" Height="30"
                                Content="-" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonMultiply" Margin="3" ToolTip="Multiply" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="MultiplyMath" Width="50" Height="30"
                                Content="×" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonDivide" Margin="3" ToolTip="Divide" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="DivideMath" Width="50" Height="30"
                                Content="÷" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonMove" Margin="3" ToolTip="Move" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="MoveMath" Width="50" Height="30"
                                Content="MOVE" Style="{StaticResource SymbolButtonStyle}"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 8: Compare -->
                <GroupBox Header="Compare" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonGreater" Margin="3" ToolTip="Greater" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="GreaterCompare" Width="50" Height="30"
                                Content=">" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonLess" Margin="3" ToolTip="Less" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="LessCompare" Width="50" Height="30"
                                Content="&lt;"  Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonGreaterOrEqual" Margin="3" ToolTip="Greater or Equal" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="GreaterOrEqualCompare" Width="50" Height="30"
                                Content="≥" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonLessOrEqual" Margin="3" ToolTip="Less or Equal" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="LessOrEqualCompare" Width="50" Height="30"
                                Content="≤" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonEqual" Margin="3" ToolTip="Equal" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="EqualCompare" Width="50" Height="30"
                                Content="=" Style="{StaticResource SymbolButtonStyle2}"/>
                        <Button x:Name="ButtonNotEqual" Margin="3" ToolTip="Not Equal" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="NotEqualCompare" Width="50" Height="30"
                                Content="≠" Style="{StaticResource SymbolButtonStyle2}"/>
                    </StackPanel>
                </GroupBox>

                <!-- Section 9: Time/Count -->
                <GroupBox Header="Time/Count" Margin="2,2,2,0" Padding="5" BorderBrush="#D3D3D3" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="ButtonOnDelayTimer" Margin="3" ToolTip="On Delay Timer" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="OnDelayTimer" Width="50" Height="30"
                                Content="TON" Style="{StaticResource SymbolButtonStyle}"/>
                        <Button x:Name="ButtonOfDelayTimer" Margin="3" ToolTip="Off Delay Timer" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="OffDelayTimer" Width="50" Height="30"
                                Content="TOFF" Style="{StaticResource SymbolButtonStyle}"/>
                        <Button x:Name="ButtonCountUp" Margin="3" ToolTip="Count Up" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="CountUp" Width="50" Height="30"
                                Content="CTU" Style="{StaticResource SymbolButtonStyle}"/>
                        <Button x:Name="ButtonCountDown" Margin="3" ToolTip="Count Down" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="CountDown" Width="50" Height="30"
                                Content="CTD" Style="{StaticResource SymbolButtonStyle}"/>
                        <Button x:Name="ButtonReset" Margin="3" ToolTip="Reset" Cursor="Hand" Background="Transparent"
                                PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" Tag="Reset" Width="50" Height="30"
                                Content="RESET" Style="{StaticResource SymbolButtonStyle}"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="410"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="GridVariables" Grid.Column="0" Background="LightGray">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" Margin="10,10,10,0" Grid.Row="0">
                    <TextBox x:Name="NameTextBox" Width="170" Margin="0,0,10,0" MaxLength="61"/>
                    <ComboBox x:Name="TypeComboBox" Width="120" Margin="0,0,10,0" SelectedIndex="0">
                        <ComboBoxItem Content="Digital Input"/>
                        <ComboBoxItem Content="Digital Output"/>
                        <ComboBoxItem Content="Analog Input"/>
                        <ComboBoxItem Content="Analog Output"/>
                        <ComboBoxItem Content="One Wire Input"/>
                        <ComboBoxItem Content="ADC Sensor"/> 
                        <ComboBoxItem Content="Boolean"/>
                        <ComboBoxItem Content="Number"/>
                        <ComboBoxItem Content="Counter"/>
                        <ComboBoxItem Content="Timer"/>
                        <ComboBoxItem Content="Current Time"/>
                        <ComboBoxItem Content="Time"/>
                    </ComboBox>
                    <Button Content="Add" Width="80" Click="ButtonAddVariable_Click"/>
                </StackPanel>

                <ListView x:Name="ElementListView" Grid.Row="1" Margin="10" ItemsSource="{Binding VariablesManager.VariablesList}" VerticalAlignment="Stretch">
                    <ListView.View>
                        <GridView>
                            <!-- Name Column -->
                            <GridViewColumn Header="Name" Width="125">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     PD_SCK">
                                                            <Setter Property="ToolTip" Value="Clock Pin" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     DOUT">
                                                            <Setter Property="ToolTip" Value="Data Output Pin" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     PV">
                                                            <Setter Property="ToolTip" Value="Preset Value" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     CV">
                                                            <Setter Property="ToolTip" Value="Current Value" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     CU">
                                                            <Setter Property="ToolTip" Value="Count Up" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     CD">
                                                            <Setter Property="ToolTip" Value="Count Down" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     QU">
                                                            <Setter Property="ToolTip" Value="Count Up Output" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     QD">
                                                            <Setter Property="ToolTip" Value="Count Down Output" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     PT">
                                                            <Setter Property="ToolTip" Value="Preset Time" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     ET">
                                                            <Setter Property="ToolTip" Value="Elapsed Time" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     IN">
                                                            <Setter Property="ToolTip" Value="Timer Input" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="     Q">
                                                            <Setter Property="ToolTip" Value="Timer Output" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <!-- Type Columnd -->
                            <GridViewColumn Header="Type" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Type}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <!-- Value Column -->
                            <GridViewColumn Header="Value" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <!-- Digital input -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Digital Input">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.DigitalInputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Digital output -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Digital Output">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.DigitalOutputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Analog input -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Analog Input">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.AnalogInputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Analog output -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Analog Output">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.AnalogOutputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- One Wire Input -->
                                                        <DataTrigger Binding="{Binding Type}" Value="One Wire Input">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.OneWireInputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- ADC Sensor -->
                                                        <DataTrigger Binding="{Binding Type}" Value="ADC Sensor">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Button Content="{Binding Value}" Width="80" Style="{StaticResource VariableBooleanButtonStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- ADC Sensor Type -->
                                                        <DataTrigger Binding="{Binding Type}" Value="ADC Sensor Type">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.AdcSensorTypes, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- ADC Sensor Digital Input -->
                                                        <DataTrigger Binding="{Binding Type}" Value="ADC Sensor Digital Input">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.DigitalInputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- ADC Sensor Digital output -->
                                                        <DataTrigger Binding="{Binding Type}" Value="ADC Sensor Digital Output">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.DevicePinManager.DigitalOutputOptions, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- ADC Sampling Rate -->
                                                        <DataTrigger Binding="{Binding Type}" Value="ADC Sensor Sampling Rate">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <ComboBox Width="80" ItemsSource="{Binding DataContext.AdcSensorSamplingRates, ElementName=MainWindowControl}"
                                                                              SelectedItem="{Binding PinName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                              Style="{StaticResource VariableComboBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Boolean -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Boolean">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Button Content="{Binding Value}" Width="80" Style="{StaticResource VariableBooleanButtonStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Number -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Number">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <TextBox Text="{Binding Value}" Width="80" Style="{StaticResource VariableTextBoxStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Counter -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Button Content="{Binding Value}" Width="80" Style="{StaticResource VariableBooleanButtonStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Timer -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Timer">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Button Content="{Binding Value}" Width="80" Style="{StaticResource VariableBooleanButtonStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Current Time -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Current Time">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <TextBlock Text=""/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- Time -->
                                                        <DataTrigger Binding="{Binding Type}" Value="Time">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <user_controls:TimePicker SelectedTime="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <!-- Delete Column -->
                            <GridViewColumn Header="" Width="35">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <!-- If Element is Deleatable -->
                                                        <DataTrigger Binding="{Binding IsDeletable}" Value="True">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Button Content="X" Width="20" Style="{StaticResource VariableDeleteButtonStyle}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            <Grid Grid.Column="1" x:Name="GridCanvas">
                <ScrollViewer x:Name="ScrollViewerCanvas" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <Canvas x:Name="MainCanvas" Background="White"
                            AllowDrop="True" Drop="Canvas_Drop" DragOver="Canvas_DragOver"
                            MouseLeftButtonDown="MainCanvas_MouseLeftButtonDown"
                            MouseMove="MainCanvas_MouseMove"
                            MouseLeftButtonUp="MainCanvas_MouseLeftButtonUp"
                            RenderTransformOrigin="0, 0">
                        <Canvas.RenderTransform>
                            <ScaleTransform x:Name="CanvasScaleTransform" ScaleX="1" ScaleY="1"/>
                        </Canvas.RenderTransform>
                    </Canvas>
                </ScrollViewer>
            </Grid>
        </Grid>

        <!-- GridSplitter -->
        <GridSplitter Grid.Row="2" Height="5" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource GridSplitterStyle}"/>

        <!-- MonitorGrid -->
        <Grid Grid.Row="3" x:Name="MonitorGrid" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/> <!-- Expander -->
            </Grid.RowDefinitions>
            <Expander Grid.Row="0" x:Name="MonitorExpander" Header="Live Monitoring" IsExpanded="False" ExpandDirection="Down"
                      Collapsed="MonitorExpander_Collapsed">
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" MinWidth="200"/>   <!-- Monitor Content -->
                        <ColumnDefinition Width="5"/>                   <!-- Resize handle -->
                        <ColumnDefinition Width="1*" MinWidth="200"/>   <!-- OneWire Content -->
                    </Grid.ColumnDefinitions>

                    <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}">
                        <TextBlock x:Name="MonitorTextBlock" TextWrapping="Wrap"/>
                    </ScrollViewer>

                    <GridSplitter Grid.Column="1" Width="5" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                    <ScrollViewer Grid.Column="2" x:Name="OneWireContent" VerticalScrollBarVisibility="Auto">
                        <ListView x:Name="OneWireItemsControl">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Pin" Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Pin}" Margin="0,0,10,0"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Address" Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Address}" FontWeight="Bold" Margin="0,0,10,0"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Type" Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Type}" Foreground="Gray" Margin="0,0,10,0"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Status" Width="170">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Text" Value=""/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsInDeviceAndFromMqtt}" Value="True">
                                                                    <Setter Property="Text" Value="Sensor already configured"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsInDeviceAndNotFromMqtt}" Value="True">
                                                                    <Setter Property="Text" Value="Sensor not found on device"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsNotInDeviceAndFromMqtt}" Value="True">
                                                                    <Setter Property="Text" Value="Sensor is not added to device"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Name" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock Text="{Binding SensorName}" Margin="0,0,10,0">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsInDevice}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBox Text="{Binding SensorName, UpdateSourceTrigger=PropertyChanged}" Width="120" Margin="0,0,10,0">
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsInDevice}" Value="False">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Action" Width="80">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <!-- Action Button -->
                                                    <Button x:Name="ActionButton" Width="60" Margin="2" Click="ActionButton_Click">
                                                        <Button.Style>
                                                            <Style TargetType="Button">
                                                                <Setter Property="Content" Value=""/>
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Setter Property="Tag" Value="{Binding}"/>
                                                                <Style.Triggers>
                                                                    <!-- Add -->
                                                                    <DataTrigger Binding="{Binding IsNotInDeviceAndFromMqtt}" Value="True">
                                                                        <Setter Property="Content" Value="Add"/>
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                        <Setter Property="Background" Value="LightGreen"/>
                                                                    </DataTrigger>
                                                                    <!-- Remove -->
                                                                    <DataTrigger Binding="{Binding IsInDevice}" Value="True">
                                                                        <Setter Property="Content" Value="Remove"/>
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                        <Setter Property="Background" Value="LightCoral"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </ScrollViewer>
                </Grid>
            </Expander>
        </Grid>
    </Grid>
</Window>
